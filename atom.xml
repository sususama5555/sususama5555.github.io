<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sapphire</title>
  
  <subtitle>興趣使然的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://notspr.com/"/>
  <updated>2020-12-02T16:37:08.055Z</updated>
  <id>https://notspr.com/</id>
  
  <author>
    <name>Ryan Shu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTPS 为什么是安全的</title>
    <link href="https://notspr.com/2020/12/03/why-https-security/"/>
    <id>https://notspr.com/2020/12/03/why-https-security/</id>
    <published>2020-12-02T16:18:01.000Z</published>
    <updated>2020-12-02T16:37:08.055Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;在之前《HTTP 与 HTTPS 的区别》中，对比了HTTP/HTTPS的不同，以及HTTP/HTTPS是如何认证的，那么HTTPS为什么是安全的？所以引出了下面的内容。&lt;/p&gt;
&lt;h2 id=&quot;HTTP-协议&quot;&gt;&lt;a href=&quot;#HTTP-协议&quot; class=&quot;headerlink&quot; title=&quot;HTTP 协议&quot;&gt;&lt;/a&gt;HTTP 协议&lt;/h2&gt;&lt;p&gt;在谈论 HTTPS 协议之前，先来回顾一下 HTTP 协议的概念。&lt;/p&gt;
&lt;h3 id=&quot;HTTP-协议介绍&quot;&gt;&lt;a href=&quot;#HTTP-协议介绍&quot; class=&quot;headerlink&quot; title=&quot;HTTP 协议介绍&quot;&gt;&lt;/a&gt;HTTP 协议介绍&lt;/h3&gt;&lt;p&gt;HTTP 协议是一种基于文本的传输协议，它位于 OSI 网络模型中的&lt;code&gt;应用层&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&quot;https://segmentfault.com/img/remote/1460000023936431&quot; alt=&quot;test&quot;&gt;&lt;/p&gt;
&lt;p&gt;HTTP 协议是通过客户端和服务器的请求应答来进行通讯，目前协议由之前的 &lt;a href=&quot;https://tools.ietf.org/html/rfc2616&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 2616&lt;/a&gt; 拆分成立六个单独的协议说明（&lt;a href=&quot;https://tools.ietf.org/html/rfc7230&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7230&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc7231&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7231&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc7232&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7232&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc7233&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7233&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc7234&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7234&lt;/a&gt;、&lt;a href=&quot;https://tools.ietf.org/html/rfc7235&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;RFC 7235&lt;/a&gt;），通讯报文如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;http://www.baidu.com&lt;/span&gt; HTTP/1.1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Host&lt;/span&gt;: www.baidu.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Connection&lt;/span&gt;: keep-alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Content-Length&lt;/span&gt;: 7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;User-Agent&lt;/span&gt;: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wd=HTTP&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;响应&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;HTTP/1.1 &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt; OK&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Connection&lt;/span&gt;: Keep-Alive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Content-Encoding&lt;/span&gt;: gzip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Content-Type&lt;/span&gt;: text/html;charset=utf-8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Date&lt;/span&gt;: Thu, 14 Feb 2019 07:23:49 GMT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;Transfer-Encoding&lt;/span&gt;: chunked&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;html&amp;gt;...&amp;lt;/html&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="计算机网络" scheme="https://notspr.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="HTTP/HTTPS" scheme="https://notspr.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP-HTTPS/"/>
    
    
      <category term="HTTP/HTTPS" scheme="https://notspr.com/tags/HTTP-HTTPS/"/>
    
      <category term="传输协议" scheme="https://notspr.com/tags/%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="SSL" scheme="https://notspr.com/tags/SSL/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix安装与部署</title>
    <link href="https://notspr.com/2020/12/01/zabbix-install-deploy/"/>
    <id>https://notspr.com/2020/12/01/zabbix-install-deploy/</id>
    <published>2020-11-30T16:05:19.000Z</published>
    <updated>2020-12-01T16:48:58.231Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;/blockquote&gt;
&lt;p&gt;最近工作中和&lt;code&gt;Zabbix&lt;/code&gt;打了不少交道，大概分为两个用途。&lt;/p&gt;
&lt;p&gt;一种是对接它的API接口，例如创建账号、媒介、触发器、动作等，这种比较简单，照着API文档来就行了，这里不多赘述。&lt;/p&gt;
&lt;p&gt;另一种就是，使用Python脚本创建一套Zabbix告警推送的流程，将超过阈值的Zabbix告警按照指定的流程和动作推送到告警中心，而告警中心使用Zabbix作为其中一个告警源，不断拉取并且分发告警。这应该属于监控、告警等最常见的自动化运维的场景了，我对此也比较感兴趣，所有想从Zabbix较为基础的单机版安装及部署学习，也就有了这篇文章。&lt;/p&gt;
&lt;p&gt;事先已在本地开发环境的虚拟机中安装与部署成功，现在期望将Zabbix部署到阿里云的机器上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;注意：安装部署时，由于环境和版本的问题也踩了不少坑，希望能给读者一些启示。&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="监控" scheme="https://notspr.com/categories/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="Zabbix" scheme="https://notspr.com/categories/%E7%9B%91%E6%8E%A7/Zabbix/"/>
    
    
      <category term="监控" scheme="https://notspr.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
      <category term="Zabbix" scheme="https://notspr.com/tags/Zabbix/"/>
    
      <category term="告警" scheme="https://notspr.com/tags/%E5%91%8A%E8%AD%A6/"/>
    
      <category term="开源" scheme="https://notspr.com/tags/%E5%BC%80%E6%BA%90/"/>
    
      <category term="阿里云" scheme="https://notspr.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="安装部署" scheme="https://notspr.com/tags/%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>Go语言之xorm使用实例</title>
    <link href="https://notspr.com/2020/11/30/go-xorm-sample/"/>
    <id>https://notspr.com/2020/11/30/go-xorm-sample/</id>
    <published>2020-11-29T16:52:27.000Z</published>
    <updated>2020-12-02T16:16:17.164Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;/blockquote&gt;
&lt;p&gt;本文为 &lt;strong&gt;&lt;em&gt;xorm - Go 语言 ORM&lt;/em&gt;&lt;/strong&gt; 之后，对 &lt;strong&gt;&lt;em&gt;xorm&lt;/em&gt;&lt;/strong&gt; 的练习代码。&lt;/p&gt;
&lt;p&gt;学习Go语言之初，在 &lt;strong&gt;&lt;em&gt;Go语言之顺序编程&lt;/em&gt;&lt;/strong&gt; 这篇文章中，记录了条件、循环、选择、跳转等语句的练习情况。而最近又学到了 &lt;strong&gt;&lt;em&gt;xorm - Go 语言 ORM&lt;/em&gt;&lt;/strong&gt; 的内容，我就想把这两部分内容结合起来，实现一个简单的需求场景。&lt;/p&gt;
&lt;p&gt;需求具体为：使用shell作为交互界面，sqlite作为数据库，使用xorm实现类似于人员信息或者银行账户的增删改查，里面也会涉及到顺序编程的内容。&lt;/p&gt;
&lt;p&gt;你可以在&lt;code&gt;GitHub&lt;/code&gt;上找到本次代码：&lt;a href=&quot;https://github.com/sususama5555/go-xorm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/sususama5555/go-xorm&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Golan" scheme="https://notspr.com/categories/Golan/"/>
    
      <category term="xorm" scheme="https://notspr.com/categories/Golan/xorm/"/>
    
    
      <category term="数据库" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORM" scheme="https://notspr.com/tags/ORM/"/>
    
      <category term="Golang" scheme="https://notspr.com/tags/Golang/"/>
    
      <category term="xorm" scheme="https://notspr.com/tags/xorm/"/>
    
      <category term="实战练习" scheme="https://notspr.com/tags/%E5%AE%9E%E6%88%98%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>xorm - Go 语言 ORM</title>
    <link href="https://notspr.com/2020/11/29/go-xorm/"/>
    <id>https://notspr.com/2020/11/29/go-xorm/</id>
    <published>2020-11-29T15:58:27.000Z</published>
    <updated>2020-12-01T17:48:45.217Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;xorm简介&quot;&gt;&lt;a href=&quot;#xorm简介&quot; class=&quot;headerlink&quot; title=&quot;xorm简介&quot;&gt;&lt;/a&gt;xorm简介&lt;/h1&gt;&lt;/blockquote&gt;
&lt;p&gt;官方定义：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;XORM is a Simple &amp;amp; Powerful ORM Framework for Go Programming Language&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;xorm是一个简单而强大的Go语言ORM库. 通过它可以使数据库操作非常简便。xorm的目标并不是让你完全不去学习SQL，我们认为SQL并不会为ORM所替代，但是ORM将可以解决绝大部分的简单SQL需求。xorm支持两种风格的混用。&lt;/p&gt;
&lt;p&gt;本文是xorm的操作手册，后续有原创文章记录xorm实例代码。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;*&lt;u&gt;申明：以下大部分内容，是本人在遍历性阅读官方文档时的摘抄，不是本人原创，目的是迁移到自己博客，方便后续学习与查阅。小部分内容为个人代码。&lt;/u&gt;*&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Golang" scheme="https://notspr.com/categories/Golang/"/>
    
      <category term="xorm" scheme="https://notspr.com/categories/Golang/xorm/"/>
    
    
      <category term="数据库" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="ORM" scheme="https://notspr.com/tags/ORM/"/>
    
      <category term="Golang" scheme="https://notspr.com/tags/Golang/"/>
    
      <category term="xorm" scheme="https://notspr.com/tags/xorm/"/>
    
      <category term="操作手册" scheme="https://notspr.com/tags/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    
      <category term="搬运" scheme="https://notspr.com/tags/%E6%90%AC%E8%BF%90/"/>
    
  </entry>
  
  <entry>
    <title>ES6之 async 与 await</title>
    <link href="https://notspr.com/2020/11/25/es6-async-await/"/>
    <id>https://notspr.com/2020/11/25/es6-async-await/</id>
    <published>2020-11-25T15:53:32.000Z</published>
    <updated>2020-11-26T16:32:44.714Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;async&quot;&gt;&lt;a href=&quot;#async&quot; class=&quot;headerlink&quot; title=&quot;async&quot;&gt;&lt;/a&gt;async&lt;/h2&gt;&lt;p&gt;async 是 ES6 才有的与异步操作有关的关键字，和 Promise ， Generator 有很大关联的。&lt;/p&gt;
&lt;h3 id=&quot;语法&quot;&gt;&lt;a href=&quot;#语法&quot; class=&quot;headerlink&quot; title=&quot;语法&quot;&gt;&lt;/a&gt;语法&lt;/h3&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;name&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;[param[, param[, ... param]]]&lt;/span&gt;) &lt;/span&gt;&amp;#123; statements &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;name: 函数名称。&lt;/li&gt;
&lt;li&gt;param: 要传递给函数的参数的名称。&lt;/li&gt;
&lt;li&gt;statements: 函数体语句。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;返回值&quot;&gt;&lt;a href=&quot;#返回值&quot; class=&quot;headerlink&quot; title=&quot;返回值&quot;&gt;&lt;/a&gt;返回值&lt;/h3&gt;&lt;p&gt;一个&lt;a href=&quot;https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;，这个promise要么会通过一个由async函数返回的值被解决，要么会通过一个从async函数中抛出的（或其中没有被捕获到的）异常被拒绝。&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://notspr.com/categories/JavaScript/"/>
    
      <category term="异步" scheme="https://notspr.com/categories/JavaScript/%E5%BC%82%E6%AD%A5/"/>
    
    
      <category term="JavaScript" scheme="https://notspr.com/tags/JavaScript/"/>
    
      <category term="前端" scheme="https://notspr.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="ES6" scheme="https://notspr.com/tags/ES6/"/>
    
      <category term="异步函数" scheme="https://notspr.com/tags/%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>GO语言之Prometheus Exporter开发</title>
    <link href="https://notspr.com/2020/11/25/go-prometheus-export/"/>
    <id>https://notspr.com/2020/11/25/go-prometheus-export/</id>
    <published>2020-11-24T16:52:59.000Z</published>
    <updated>2020-12-01T17:48:45.202Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;蓝鲸监控通过 job 部署 prometheus 社区的 Exporter，对目标组件进行性能数据采集。接着 bkmetricbeat 从 Exporter 上周期拉取性能数据并通过数据通道上报。&lt;/p&gt;
&lt;h3 id=&quot;自定义组件采集导入流程&quot;&gt;&lt;a href=&quot;#自定义组件采集导入流程&quot; class=&quot;headerlink&quot; title=&quot;自定义组件采集导入流程&quot;&gt;&lt;/a&gt;自定义组件采集导入流程&lt;/h3&gt;&lt;p&gt;蓝鲸监控当前支持使用 go 编写 Exporter&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在社区找到适合自己的 Exporter 或者编写新的 Exporter&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将源码编译成二进制文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将编译的 Exporter 打成 zip 包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;上传配置文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Golang" scheme="https://notspr.com/categories/Golang/"/>
    
      <category term="Prometheus" scheme="https://notspr.com/categories/Golang/Prometheus/"/>
    
    
      <category term="Golang" scheme="https://notspr.com/tags/Golang/"/>
    
      <category term="Prometheus" scheme="https://notspr.com/tags/Prometheus/"/>
    
      <category term="Exporter" scheme="https://notspr.com/tags/Exporter/"/>
    
      <category term="监控" scheme="https://notspr.com/tags/%E7%9B%91%E6%8E%A7/"/>
    
  </entry>
  
  <entry>
    <title>蓝鲸开发框架进阶</title>
    <link href="https://notspr.com/2020/11/24/bk-django-framework-advanced/"/>
    <id>https://notspr.com/2020/11/24/bk-django-framework-advanced/</id>
    <published>2020-11-23T17:57:51.000Z</published>
    <updated>2020-11-23T18:18:17.213Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;之前的文章描述了蓝鲸开发框架的基础指南，以下将继续上文，讲述蓝鲸开发框架的进阶使用，包括登陆与用户对接、数据库配置、Django的配置修改，和中间件及公共方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="蓝鲸" scheme="https://notspr.com/categories/%E8%93%9D%E9%B2%B8/"/>
    
      <category term="开发框架" scheme="https://notspr.com/categories/%E8%93%9D%E9%B2%B8/%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="Django" scheme="https://notspr.com/tags/Django/"/>
    
      <category term="蓝鲸" scheme="https://notspr.com/tags/%E8%93%9D%E9%B2%B8/"/>
    
  </entry>
  
  <entry>
    <title>初识蓝鲸开发框架</title>
    <link href="https://notspr.com/2020/11/24/bk-django-framework/"/>
    <id>https://notspr.com/2020/11/24/bk-django-framework/</id>
    <published>2020-11-23T17:34:52.000Z</published>
    <updated>2020-11-23T18:18:11.309Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;蓝鲸-Python-开发框架简介&quot;&gt;&lt;a href=&quot;#蓝鲸-Python-开发框架简介&quot; class=&quot;headerlink&quot; title=&quot;蓝鲸 Python 开发框架简介&quot;&gt;&lt;/a&gt;蓝鲸 Python 开发框架简介&lt;/h2&gt;&lt;p&gt;Python 开发框架是集成了蓝鲸系统功能，方便开发者可以快速在蓝鲸 PaaS 平台上开发 SaaS 的 Python 框架。&lt;/p&gt;
&lt;p&gt;该开发框架基于 Django 框架架构，并在此基础上进行扩展，增加蓝鲸系统的特有功能，&lt;/p&gt;
&lt;p&gt;例如：身份验证、ESB 调用及模板渲染等功能，以便开发者可以更专注于 SaaS 的逻辑开发。&lt;/p&gt;
    
    </summary>
    
    
      <category term="蓝鲸" scheme="https://notspr.com/categories/%E8%93%9D%E9%B2%B8/"/>
    
      <category term="开发框架" scheme="https://notspr.com/categories/%E8%93%9D%E9%B2%B8/%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="Django" scheme="https://notspr.com/tags/Django/"/>
    
      <category term="蓝鲸" scheme="https://notspr.com/tags/%E8%93%9D%E9%B2%B8/"/>
    
  </entry>
  
  <entry>
    <title>Python之全局解释器锁GIL</title>
    <link href="https://notspr.com/2020/11/23/python-GIL/"/>
    <id>https://notspr.com/2020/11/23/python-GIL/</id>
    <published>2020-11-22T16:54:11.000Z</published>
    <updated>2020-11-22T17:29:38.088Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;GIL(Global Interpreter Lock)，也称为全局解释器，官方解释为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In CPython, the global interpreter lock, or GIL, is a mutex that prevents multiple native threads from executing Python bytecodes at once. This lock is necessary mainly because CPython’s memory management is not thread-safe. (However, since the GIL exists, other features have grown to depend on the guarantees that it enforces.)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要意思为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GIL是一个互斥锁，它防止多个线程同时执行Python字节码。这个锁是必要的，主要是因为CPython的内存管理不是线程安全的&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://notspr.com/categories/Python/"/>
    
      <category term="GIL" scheme="https://notspr.com/categories/Python/GIL/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="多线程" scheme="https://notspr.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="GIL" scheme="https://notspr.com/tags/GIL/"/>
    
      <category term="全局解释器锁" scheme="https://notspr.com/tags/%E5%85%A8%E5%B1%80%E8%A7%A3%E9%87%8A%E5%99%A8%E9%94%81/"/>
    
  </entry>
  
  <entry>
    <title>Django之ORM操作</title>
    <link href="https://notspr.com/2020/11/21/django-orm/"/>
    <id>https://notspr.com/2020/11/21/django-orm/</id>
    <published>2020-11-20T19:07:42.000Z</published>
    <updated>2020-11-23T17:31:46.865Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h1 id=&quot;Django-ORM&quot;&gt;&lt;a href=&quot;#Django-ORM&quot; class=&quot;headerlink&quot; title=&quot;Django ORM&quot;&gt;&lt;/a&gt;Django ORM&lt;/h1&gt;&lt;/blockquote&gt;
&lt;p&gt;Django 模型使用自带的 ORM。&lt;/p&gt;
&lt;p&gt;&lt;kbd&gt;对象关系映射&lt;/kbd&gt;（Object Relational Mapping，简称 ORM ）用于实现面向对象编程语言里不同类型系统的数据之间的转换。&lt;/p&gt;
&lt;p&gt;ORM 在业务逻辑层和数据库层之间充当了桥梁的作用。&lt;/p&gt;
&lt;p&gt;ORM 是通过使用描述对象和数据库之间的映射的元数据，将程序中的对象自动持久化到数据库中。&lt;/p&gt;
&lt;img data-src=&quot;/2020/11/21/django-orm/django-orm1.png&quot; class&gt;
    
    </summary>
    
    
      <category term="Django" scheme="https://notspr.com/categories/Django/"/>
    
      <category term="ORM" scheme="https://notspr.com/categories/Django/ORM/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="数据库" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Django" scheme="https://notspr.com/tags/Django/"/>
    
      <category term="ORM" scheme="https://notspr.com/tags/ORM/"/>
    
  </entry>
  
  <entry>
    <title>Python之Celery</title>
    <link href="https://notspr.com/2020/11/20/celery/"/>
    <id>https://notspr.com/2020/11/20/celery/</id>
    <published>2020-11-19T17:11:44.000Z</published>
    <updated>2020-11-19T19:13:36.848Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Celery 是一款非常简单、灵活、可靠的分布式系统，可用于处理大量消息，并且提供了一整套操作此系统的一系列工具。&lt;/li&gt;
&lt;li&gt;Celery 是一款专注于实时处理的异步任务队列，可用于处理实时数据以及任务调度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Celery架构&quot;&gt;&lt;a href=&quot;#Celery架构&quot; class=&quot;headerlink&quot; title=&quot;Celery架构&quot;&gt;&lt;/a&gt;Celery架构&lt;/h3&gt;&lt;p&gt;Celery的架构由三部分组成，消息中间件（message broker），任务执行单元（worker）和任务执行结果存储（task result store）组成。&lt;/p&gt;
&lt;img data-src=&quot;/2020/11/20/celery/celery-architecture.png&quot; class&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://notspr.com/categories/Python/"/>
    
      <category term="Celery" scheme="https://notspr.com/categories/Python/Celery/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="Redis" scheme="https://notspr.com/tags/Redis/"/>
    
      <category term="Celery" scheme="https://notspr.com/tags/Celery/"/>
    
      <category term="Django" scheme="https://notspr.com/tags/Django/"/>
    
      <category term="RabbitMQ" scheme="https://notspr.com/tags/RabbitMQ/"/>
    
  </entry>
  
  <entry>
    <title>Python之多线程与多进程</title>
    <link href="https://notspr.com/2020/11/18/python-thread-process/"/>
    <id>https://notspr.com/2020/11/18/python-thread-process/</id>
    <published>2020-11-18T15:31:07.000Z</published>
    <updated>2020-11-18T17:02:33.667Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;现代操作系统比如Mac OS X，UNIX，Linux，Windows等，都是支持“多任务”的操作系统，操作系统可以同时运行多个任务。&lt;/p&gt;
&lt;p&gt;对于操作系统来说，一个任务就是一个进程（Process），比如打开一个浏览器就是启动一个浏览器进程，打开一个记事本就启动了一个记事本进程，打开两个记事本就启动了两个记事本进程，打开一个Word就启动了一个Word进程。&lt;/p&gt;
&lt;p&gt;有些进程还不止同时干一件事，比如Word，它可以同时进行打字、拼写检查、打印等事情。在一个进程内部，要同时干多件事，就需要同时运行多个“子任务”，我们把进程内的这些“子任务”称为线程（Thread）。&lt;/p&gt;
&lt;p&gt;多任务的实现有3种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多进程模式；&lt;/li&gt;
&lt;li&gt;多线程模式；&lt;/li&gt;
&lt;li&gt;多进程 + 多线程模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Python既支持多进程，又支持多线程，线程是最小的执行单元，而进程由至少一个线程组成。如何调度进程和线程，完全由操作系统决定，程序自己不能决定什么时候执行，执行多长时间。&lt;/p&gt;
&lt;p&gt;多进程和多线程的程序涉及到同步、数据共享的问题，编写起来更复杂。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://notspr.com/categories/Python/"/>
    
      <category term="多任务" scheme="https://notspr.com/categories/Python/%E5%A4%9A%E4%BB%BB%E5%8A%A1/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="多线程" scheme="https://notspr.com/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="多进程" scheme="https://notspr.com/tags/%E5%A4%9A%E8%BF%9B%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python之使用pyvmomi管理VMware</title>
    <link href="https://notspr.com/2020/11/17/pyvmomi-sample/"/>
    <id>https://notspr.com/2020/11/17/pyvmomi-sample/</id>
    <published>2020-11-17T15:40:48.000Z</published>
    <updated>2020-11-17T17:15:18.438Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;官方定义：&lt;/p&gt;
&lt;p&gt;pyVmomi is the Python SDK for the VMware vSphere API that allows you to manage ESX, ESXi, and vCenter.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://link.jianshu.com/?t=https://github.com/vmware/pyvmomi/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;pyVmomi&lt;/a&gt; 是 VMware vSphere API 的一个 Python sdk，我们可以利用它来管理与交互vCenter、ESX、ESXi，获取我们需要的信息。&lt;/p&gt;
&lt;p&gt;由于工作中需要对接vCenter，实现虚拟化平台、数据中心、物理机、物理机和存储的指标采集及监控，也需要通过启停虚拟机网卡来实现灾备切换，所以本文结合了笔者的经验和 pyVmomi 官方案例。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://notspr.com/categories/Python/"/>
    
      <category term="虚拟化" scheme="https://notspr.com/categories/Python/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="VMware vSphere" scheme="https://notspr.com/tags/VMware-vSphere/"/>
    
      <category term="vCenter" scheme="https://notspr.com/tags/vCenter/"/>
    
      <category term="虚拟化" scheme="https://notspr.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="pyvmomi" scheme="https://notspr.com/tags/pyvmomi/"/>
    
  </entry>
  
  <entry>
    <title>Redis修炼之使用场景</title>
    <link href="https://notspr.com/2020/11/16/redis-use-case/"/>
    <id>https://notspr.com/2020/11/16/redis-use-case/</id>
    <published>2020-11-15T16:33:06.000Z</published>
    <updated>2020-11-16T15:57:06.572Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;/blockquote&gt;
&lt;p&gt;接着Redis数据类型来说，来谈谈Redis的具体使用场景，首先回顾一下：&lt;/p&gt;
&lt;p&gt;Redis是一种基于键值对的NoSQL数据库，它的值主要由string（字符串），hash（哈希），list（列表），set（集合），zset（有序集合）五种基本数据结构构成。那么这些数据结构的使用场景有哪些？以下将用内部编码及使用场景的方式浅析Redis的五种数据类型。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis修炼" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="Redis" scheme="https://notspr.com/tags/Redis/"/>
    
      <category term="Redis使用场景" scheme="https://notspr.com/tags/Redis%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>Redis修炼之数据类型</title>
    <link href="https://notspr.com/2020/11/12/redis-data-types/"/>
    <id>https://notspr.com/2020/11/12/redis-data-types/</id>
    <published>2020-11-11T16:34:08.000Z</published>
    <updated>2020-11-16T15:50:11.930Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一、Redis 数据类型:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;1、String（字符串）&lt;/strong&gt;&lt;br&gt;string 是 Redis 最基本的类型，理解成与 Memcached 一模一样的类型，一个 key 对应一个 value。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、Hash（哈希）&lt;/strong&gt;&lt;br&gt;Redis hash 是一个键值(key=&amp;gt;value)对集合。&lt;br&gt;Redis hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis修炼" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="数据库" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Redis" scheme="https://notspr.com/tags/Redis/"/>
    
      <category term="数据类型" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>Python中构建MySql连接池</title>
    <link href="https://notspr.com/2020/11/09/python-mysql-pool/"/>
    <id>https://notspr.com/2020/11/09/python-mysql-pool/</id>
    <published>2020-11-09T15:17:35.000Z</published>
    <updated>2020-11-18T16:58:30.354Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;背景：为何要使用连接池&lt;/b&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;数据库连接是一种关键的、有限的、昂贵的资源，这一点在多用户的网页应用程序中体现得尤为突出。对数据库连接的管理能显著影响到整个应用程序的伸缩性和健壮性，影响到程序的性能指标。数据库连接池正是针对这个问题提出来的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySql修炼" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySql%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="数据库" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="数据库连接池" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0/"/>
    
      <category term="MySql" scheme="https://notspr.com/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>红黑树</title>
    <link href="https://notspr.com/2020/11/01/red-black-tree/"/>
    <id>https://notspr.com/2020/11/01/red-black-tree/</id>
    <published>2020-11-01T14:13:53.000Z</published>
    <updated>2020-11-16T15:55:46.089Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;红黑树其实就是一种数据结构，设计它的目的就是为了高效地进行增删改查，我们可以从二叉查找树逐渐引入到红黑树：&lt;/p&gt;
&lt;h3 id=&quot;一、二叉查找树&quot;&gt;&lt;a href=&quot;#一、二叉查找树&quot; class=&quot;headerlink&quot; title=&quot;一、二叉查找树&quot;&gt;&lt;/a&gt;一、二叉查找树&lt;/h3&gt;&lt;p&gt;特性：&lt;br&gt;（1）左子树上所有结点的值均小于或等于它的根结点的值；&lt;br&gt;（2）右子树上所有结点的值均大于或等于它的根结点的值。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="红黑树" scheme="https://notspr.com/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>B树与B+树</title>
    <link href="https://notspr.com/2020/10/17/B-B-tree/"/>
    <id>https://notspr.com/2020/10/17/B-B-tree/</id>
    <published>2020-10-17T11:07:22.000Z</published>
    <updated>2020-11-18T16:48:33.696Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、B树和B-树的区别&quot;&gt;&lt;a href=&quot;#一、B树和B-树的区别&quot; class=&quot;headerlink&quot; title=&quot;一、B树和B+树的区别&quot;&gt;&lt;/a&gt;一、B树和B+树的区别&lt;/h2&gt;&lt;p&gt;很明显，我们要想弄清楚原因就要知道B树和B+树的区别。为了不长篇大论。我们直接给出他们的形式总结他们的特点。&lt;/p&gt;
&lt;h3 id=&quot;1、B树&quot;&gt;&lt;a href=&quot;#1、B树&quot; class=&quot;headerlink&quot; title=&quot;1、B树&quot;&gt;&lt;/a&gt;1、B树&lt;/h3&gt;&lt;p&gt;B树是一种自平衡的搜索树，形式很简单：&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据结构" scheme="https://notspr.com/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="B树与B+树" scheme="https://notspr.com/tags/B%E6%A0%91%E4%B8%8EB-%E6%A0%91/"/>
    
      <category term="数据结构" scheme="https://notspr.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>VMware vSphere 之 vCenter 指标采集</title>
    <link href="https://notspr.com/2020/10/09/vmware-vsphere/"/>
    <id>https://notspr.com/2020/10/09/vmware-vsphere/</id>
    <published>2020-10-09T10:06:10.000Z</published>
    <updated>2020-11-18T16:58:27.291Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;h3 id=&quot;摘要&quot;&gt;&lt;a href=&quot;#摘要&quot; class=&quot;headerlink&quot; title=&quot;摘要&quot;&gt;&lt;/a&gt;摘要&lt;/h3&gt;&lt;/blockquote&gt;
&lt;p&gt;VMware vSphere 是 VMware 的虚拟化平台，可将数据中心转换为包括 CPU、存储和网络资源的聚合计算基础架构。vSphere 将这些基础架构作为一个统一的运行环境进行管理，并提供工具来管理加入该环境的数据中心。&lt;/p&gt;
&lt;p&gt;在对接或采集VMware vSphere虚拟化平台的场景中，比如配置八爪鱼，需要对其中的虚拟化数据中心、虚拟化集群、物理机、虚拟机、存储等指标进行多方位的采集，我们根据VMware提供的相应sdk接口，对接到蓝鲸的SaaS中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://notspr.com/categories/Python/"/>
    
      <category term="VMware" scheme="https://notspr.com/categories/Python/VMware/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="VMware vSphere" scheme="https://notspr.com/tags/VMware-vSphere/"/>
    
      <category term="vCenter" scheme="https://notspr.com/tags/vCenter/"/>
    
      <category term="虚拟化" scheme="https://notspr.com/tags/%E8%99%9A%E6%8B%9F%E5%8C%96/"/>
    
      <category term="技术文章" scheme="https://notspr.com/tags/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
  </entry>
  
  <entry>
    <title>记一次持续到凌晨两点半的coding</title>
    <link href="https://notspr.com/2020/09/26/2020-09-26/"/>
    <id>https://notspr.com/2020/09/26/2020-09-26/</id>
    <published>2020-09-25T18:34:12.000Z</published>
    <updated>2020-11-18T16:58:23.055Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;二叉搜索树的后序遍历序列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题干&lt;/strong&gt;：&lt;br&gt;输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。&lt;br&gt;如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。&lt;/p&gt;
    
    </summary>
    
    
      <category term="算法修炼" scheme="https://notspr.com/categories/%E7%AE%97%E6%B3%95%E4%BF%AE%E7%82%BC/"/>
    
    
      <category term="Python" scheme="https://notspr.com/tags/Python/"/>
    
      <category term="剑指offer" scheme="https://notspr.com/tags/%E5%89%91%E6%8C%87offer/"/>
    
      <category term="二叉搜索树" scheme="https://notspr.com/tags/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/"/>
    
  </entry>
  
</feed>
